# This is a basic workflow to help you get started with Actions

name: SAST

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Source Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}  

      # Setup Java 1.8
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Setup Scan Central
        uses: fortify/gha-setup-scancentral-client@v1.1.1
        with:
          version: 20.1.0
          client-auth-token: CHANGEME321!

      - name: Perform SAST
        run: scancentral -sscurl "${{ env.URL }}" -ssctoken ${{ env.TOKEN }} start ${{ env.BUILD_OPTS }} -upload -application "${{ env.APPLICATION }}" -version ${{ env.VERSION }} -uptoken ${{ env.TOKEN }} -block -o -f myshuttle.fpr -log-file myshuttle.log 
        env:
          URL: "http://fortify201.myhome.com:8080/ssc"
          TOKEN: bda951b8-9425-414d-a84f-35931a7e86cc
          APPLICATION: "My Shuttle - GITHUB"
          VERSION: "1.0"
          BUILD_OPTS: "-bt mvn"
       
      - name: Save Scan Report
        uses: actions/upload-artifact@v2                
        with:
           name: SASTScanfpr
           path: ${{ github.workspace }}/myshuttle.fpr
           
      # Runs a set of commands using the runners shell
      - name: Converting FPR to SARIF
        run: |
          echo "Converting FPR to SARIF format"
          cd ${{ github.workspace }}
          C:\Users\Administrator\.dotnet\tools\sarif convert myshuttle.fpr --tool FortifyFpr --output myshuttle.sarif --pretty-print --force
          echo "Conversion Done."
      # Uploads results.sarif to GitHub repository using the upload-sarif action
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
         sarif_file: myshuttle.sarif
